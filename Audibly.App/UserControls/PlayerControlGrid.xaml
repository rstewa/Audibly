<?xml version="1.0" encoding="utf-8" ?>

<UserControl
    x:Class="Audibly.App.UserControls.PlayerControlGrid"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:Audibly.App.Helpers.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:developerTools="using:CommunityToolkit.WinUI.DeveloperTools"
    xmlns:local="using:Audibly.App.UserControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:models="using:Audibly.Models"
    xmlns:vm="using:Audibly.App.ViewModels"
    xmlns:winUi="using:CommunityToolkit.WinUI"
    mc:Ignorable="d">
    <!--  ReSharper disable all Xaml.RedundantResource  -->

    <UserControl.Resources>
        <converters:ProgressSliderValueConverter x:Key="ProgressSliderValueConverter" />
    </UserControl.Resources>
    <Grid>
        <Grid.Resources>
            <ResourceDictionary x:Key="ButtonResources">
                <SolidColorBrush x:Key="ButtonBackground">Transparent</SolidColorBrush>
                <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Transparent</SolidColorBrush>
                <SolidColorBrush x:Key="ButtonBackgroundPressed">Transparent</SolidColorBrush>
                <SolidColorBrush x:Key="ButtonBackgroundDisabled">Transparent</SolidColorBrush>

                <SolidColorBrush x:Key="RepeatButtonBackground">Transparent</SolidColorBrush>
                <SolidColorBrush x:Key="RepeatButtonBackgroundPointerOver">Transparent</SolidColorBrush>
                <SolidColorBrush x:Key="RepeatButtonBackgroundPressed">Transparent</SolidColorBrush>
                <SolidColorBrush x:Key="RepeatButtonBackgroundDisabled">Transparent</SolidColorBrush>
            </ResourceDictionary>
        </Grid.Resources>

        <MediaPlayerElement
            x:Name="AudioPlayer"
            AreTransportControlsEnabled="False"
            Visibility="Collapsed" />

        <developerTools:AlignmentGrid
            Grid.RowSpan="3"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Visibility="{x:Bind ViewModel.ShowAlignmentGrids, Mode=OneWay}" />

        <Grid x:Name="ControlsGrid" ColumnSpacing="16">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="Column0" Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  Cover Image  -->
            <local:CoverImageTile
                x:Name="CoverImageTile"
                Grid.RowSpan="3"
                Grid.Column="0"
                CoverImageRadius="10"
                CoverImageSize="112"
                Visibility="{x:Bind ShowCoverImage, Mode=OneWay}" />

            <!--  player controls  -->
            <Grid
                Grid.Row="0"
                Grid.Column="1"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Top">

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <!-- <ColumnDefinition Width="Auto" /> -->
                </Grid.ColumnDefinitions>

                <!--  Title, Artist, Separator & Chapter Selection  -->
                <StackPanel
                    Grid.Column="0"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">

                    <local:TitleArtistStack TitleMaxWidth="230" />

                    <!--  separator and chapter selection  -->
                    <StackPanel Orientation="Horizontal">
                        <Border
                            x:Name="Separator"
                            Width="1"
                            Height="40"
                            Margin="16,0,16,0"
                            Background="{ThemeResource AppBarSeparatorForeground}" />

                        <!--  chapter selection  -->
                        <ComboBox
                            x:Name="ChapterCombo"
                            MaxWidth="250"
                            VerticalAlignment="Top"
                            HorizontalContentAlignment="Center"
                            Background="Transparent"
                            BorderThickness="0"
                            FontSize="16"
                            ItemsSource="{x:Bind PlayerViewModel.NowPlaying.Chapters, Mode=OneWay}"
                            SelectedIndex="{x:Bind PlayerViewModel.ChapterComboSelectedIndex, Mode=TwoWay}"
                            SelectionChanged="ChapterCombo_SelectionChanged"
                            ToolTipService.ToolTip="Chapter Selection">
                            <ComboBox.ItemTemplate>
                                <DataTemplate x:DataType="models:ChapterInfo">
                                    <TextBlock
                                        Text="{x:Bind Title}"
                                        TextTrimming="CharacterEllipsis"
                                        TextWrapping="NoWrap" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                </StackPanel>

                <!--  volume, playback speed, and maximize/minimize buttons  -->
                <StackPanel
                    Grid.Column="1"
                    Margin="0,-8,-12,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">

                    <!--#region VolumeLevelButton-->
                    <Button
                        x:Name="VolumeLevelButton"
                        Background="Transparent"
                        BorderThickness="0"
                        ToolTipService.ToolTip="Volume Level">
                        <FontIcon
                            x:Name="AudioLevelButtonIcon"
                            FontFamily="Segoe MDL2 Assets"
                            Glyph="{x:Bind PlayerViewModel.VolumeLevelGlyph, Mode=OneWay}" />
                        <Button.Flyout>
                            <Flyout>
                                <Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="FlyoutPresenter">
                                        <Setter Property="MinWidth" Value="30" />
                                        <Setter Property="MaxWidth" Value="30" />
                                        <Setter Property="MinHeight" Value="125" />
                                        <Setter Property="CornerRadius" Value="4" />
                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>
                                <Grid>
                                    <Slider
                                        x:Name="VolumeLevelSlider"
                                        Margin="-14,0,0,0"
                                        AutomationProperties.Name="VolumeLevelSlider"
                                        LargeChange="25"
                                        Maximum="100"
                                        Minimum="0"
                                        Orientation="Vertical"
                                        SmallChange="1"
                                        SnapsTo="StepValues"
                                        StepFrequency="1"
                                        ToolTipService.ToolTip="Volume Level"
                                        ValueChanged="VolumeSlider_ValueChanged"
                                        Value="{x:Bind PlayerViewModel.VolumeLevel, Mode=OneWay}" />
                                </Grid>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                    <!--#endregion VolumeLevelButton-->

                    <!--#region PlaybackSpeedButton-->
                    <Button
                        x:Name="PlaybackSpeedButton"
                        Background="Transparent"
                        BorderThickness="0"
                        ToolTipService.ToolTip="Playback Speed">
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xEC57;" />
                        <!--  Glyph="{x:Bind AudiobookViewModel.Audiobook.PlaybackGlyph}" />  -->
                        <Button.Flyout>
                            <Flyout>
                                <Flyout.FlyoutPresenterStyle>
                                    <Style TargetType="FlyoutPresenter">
                                        <Setter Property="MinWidth" Value="30" />
                                        <Setter Property="MaxWidth" Value="30" />
                                        <Setter Property="MinHeight" Value="125" />
                                        <Setter Property="CornerRadius" Value="4" />
                                        <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Disabled" />
                                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                                        <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />
                                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
                                    </Style>
                                </Flyout.FlyoutPresenterStyle>
                                <Grid>
                                    <Slider
                                        x:Name="PlaybackSpeedSlider"
                                        Margin="-14,0,0,0"
                                        AutomationProperties.Name="PlaybackSpeedSlider"
                                        Maximum="4.0"
                                        Minimum="0.5"
                                        Orientation="Vertical"
                                        SmallChange="0.05"
                                        SnapsTo="StepValues"
                                        StepFrequency="0.05"
                                        ToolTipService.ToolTip="Playback Speed"
                                        ValueChanged="PlaybackSpeedSlider_ValueChanged"
                                        Value="{x:Bind PlayerViewModel.PlaybackSpeed, Mode=OneWay}" />
                                </Grid>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                    <!--#endregion PlaybackSpeedButton-->

                    <!--#region TimerButton-->
                    <Button
                        x:Name="TimerButton"
                        Background="Transparent"
                        BorderThickness="0"
                        Click="TimerButton_OnClick"
                        ToolTipService.ToolTip="Sleep Timer">

                        <Grid>
                            <!--  Timer Icon  -->
                            <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="&#xE916;" />

                            <!--  Badge Indicator  -->
                            <Ellipse
                                Width="8"
                                Height="8"
                                Margin="0,-2,-2,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top"
                                Fill="{ThemeResource SystemAccentColor}"
                                Visibility="{x:Bind PlayerViewModel.IsTimerActive, Mode=OneWay}" />
                        </Grid>

                        <Button.Flyout>
                            <MenuFlyout>
                                <!--  Timer status display  -->
                                <MenuFlyoutItem
                                    DataContext="{x:Bind PlayerViewModel, Mode=OneWay}"
                                    IsEnabled="False"
                                    Visibility="{x:Bind PlayerViewModel.IsTimerActive, Mode=OneWay}">
                                    <MenuFlyoutItem.Template>
                                        <ControlTemplate TargetType="MenuFlyoutItem">
                                            <TextBlock
                                                Margin="0,8,0,8"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                FontWeight="SemiBold"
                                                Foreground="{ThemeResource AccentTextFillColorPrimaryBrush}"
                                                Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext.TimerRemainingText}"
                                                TextAlignment="Center" />
                                        </ControlTemplate>
                                    </MenuFlyoutItem.Template>
                                </MenuFlyoutItem>
                                <!--  Separator when timer is active  -->
                                <MenuFlyoutSeparator Visibility="{x:Bind PlayerViewModel.IsTimerActive, Mode=OneWay}" />

                                <!--  Existing menu items  -->
                                <MenuFlyoutItem
                                    Click="TimerMenuItem_Click"
                                    Tag="300"
                                    Text="5 minutes" />
                                <MenuFlyoutItem
                                    Click="TimerMenuItem_Click"
                                    Tag="600"
                                    Text="10 minutes" />
                                <MenuFlyoutItem
                                    Click="TimerMenuItem_Click"
                                    Tag="900"
                                    Text="15 minutes" />
                                <MenuFlyoutItem
                                    Click="TimerMenuItem_Click"
                                    Tag="1800"
                                    Text="30 minutes" />
                                <MenuFlyoutItem
                                    Click="TimerMenuItem_Click"
                                    Tag="2700"
                                    Text="45 minutes" />
                                <MenuFlyoutItem
                                    Click="TimerMenuItem_Click"
                                    Tag="3600"
                                    Text="60 minutes" />
                                <MenuFlyoutItem
                                    Click="EndOfChapterTimerMenuItem_Click"
                                    Tag="EndOfChapter"
                                    Text="End of Chapter" />
                                <MenuFlyoutSeparator />
                                <MenuFlyoutItem Click="CustomTimerMenuItem_Click" Text="Custom..." />
                                <MenuFlyoutSeparator Visibility="{x:Bind PlayerViewModel.IsTimerActive, Mode=OneWay}" />
                                <MenuFlyoutItem
                                    Click="CancelTimerMenuItem_Click"
                                    Text="Cancel Timer"
                                    Visibility="{x:Bind PlayerViewModel.IsTimerActive, Mode=OneWay}" />
                            </MenuFlyout>
                        </Button.Flyout>
                    </Button>
                    <!--#endregion TimerButton-->

                    <!--#region Maximize/Minimize Button-->
                    <Button
                        x:Name="MaximizeMinimizeButton"
                        BorderThickness="0"
                        Click="MaximizePlayerButton_OnClick"
                        ToolTipService.ToolTip="Maximize Player">
                        <Button.KeyboardAccelerators>
                            <KeyboardAccelerator Key="F11" IsEnabled="{x:Bind vm:Converters.Not(PlayerViewModel.IsPlayerFullScreen), Mode=OneWay}" />
                            <KeyboardAccelerator Key="Escape" IsEnabled="{x:Bind PlayerViewModel.IsPlayerFullScreen, Mode=OneWay}" />
                        </Button.KeyboardAccelerators>
                        <FontIcon FontFamily="Segoe MDL2 Assets" Glyph="{x:Bind PlayerViewModel.MaximizeMinimizeGlyph}" />
                    </Button>
                    <!--#endregion Maximize/Minimize Button-->

                    <!--  open mini-player button  -->
                    <Button
                        x:Name="OpenInNewWindowButton"
                        BorderThickness="0"
                        Click="OpenMiniPlayerButton_OnClick"
                        ToolTipService.ToolTip="Open Mini Player">
                        <FontIcon
                            FontFamily="{StaticResource AudiblyCustomFont}"
                            FontSize="30"
                            Glyph="&#xe900;" />
                    </Button>

                </StackPanel>

            </Grid>

            <!--  play & skip buttons  -->
            <local:PlaySkipButtonsStack
                Grid.Row="1"
                Grid.Column="1"
                HorizontalAlignment="Center" />

            <!--  now playing bar  -->
            <local:NowPlayingBar
                Grid.Row="2"
                Grid.Column="1"
                Margin="0,0,0,-4"
                VerticalAlignment="Bottom" />
        </Grid>
    </Grid>
    <!-- <VisualStateManager.VisualStateGroups> -->
    <!--     <VisualStateGroup x:Name="CoverImageStates"> -->
    <!--         <VisualState x:Name="HideCoverImage"> -->
    <!--             <VisualState.StateTriggers> -->
    <!--                 <winUi:IsEqualStateTrigger To="true" Value="{x:Bind ShowCoverImage.ToString(), Mode=OneWay}" /> -->
    <!--             </VisualState.StateTriggers> -->
    <!--             <VisualState.Setters> -->
    <!--                 <Setter Target="Column0.Width" Value="0" /> -->
    <!--                 <Setter Target="CoverImageTile.Visibility" Value="Collapsed" /> -->
    <!--             </VisualState.Setters> -->
    <!--         </VisualState> -->
    <!--     </VisualStateGroup> -->
    <!-- </VisualStateManager.VisualStateGroups> -->
</UserControl>