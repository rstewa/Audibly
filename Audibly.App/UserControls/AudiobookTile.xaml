<UserControl
    Height="400"
    Width="300"
    mc:Ignorable="d"
    x:Class="Audibly.App.UserControls.AudiobookTile"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:converters="using:Audibly.App.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:CommunityToolkit.WinUI.Media"
    xmlns:winUi="using:CommunityToolkit.WinUI"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--  ReSharper disable all Xaml.RedundantResource  -->
    <UserControl.Resources>
        <converters:BooleanNegationConverter x:Key="BooleanNegationConverter" />
        <CommandBarFlyout Placement="TopEdgeAlignedRight" x:Name="CommandBarFlyout">
            <AppBarButton
                Click="PlayButton_Click"
                Icon="Play"
                ToolTipService.ToolTip="Play" />
            <AppBarButton
                Click="DeleteAudiobook_OnClick"
                Icon="Delete"
                ToolTipService.ToolTip="Delete" />
            <AppBarButton Click="ShowInFileExplorer_OnClick" ToolTipService.ToolTip="Show in File Explorer">
                <FontIcon Glyph="&#xEC50;" />
            </AppBarButton>
            <!--  open audiobook in app state folder  -->
            <AppBarButton Click="OpenInAppFolder_OnClick" ToolTipService.ToolTip="Open in App Folder">
                <FontIcon Glyph="&#xE8E5;" />
            </AppBarButton>
            <!--  more info about the audiobook  -->
            <AppBarButton Click="MoreInfo_OnClick" ToolTipService.ToolTip="More Info">
                <FontIcon Glyph="&#xE946;" />
            </AppBarButton>
            <!--  button to mark audiobook as completed  -->
            <AppBarButton
                Click="MarkAsCompleted_OnClick"
                ToolTipService.ToolTip="Mark as Completed"
                x:Name="MarkAsCompletedButton">
                <FontIcon Glyph="&#xE73E;" />
            </AppBarButton>
            <!--  mark as incomplete button  -->
            <AppBarButton
                Click="MarkAsIncomplete_OnClick"
                ToolTipService.ToolTip="Mark as Incomplete"
                Visibility="Collapsed"
                x:Name="MarkAsIncompleteButton">
                <FontIcon Glyph="&#xE894;" />
            </AppBarButton>
        </CommandBarFlyout>
    </UserControl.Resources>
    <Button
        Background="Transparent"
        BorderBrush="Transparent"
        CornerRadius="8"
        Padding="16"
        PointerEntered="AudiobookTile_OnPointerEntered"
        PointerExited="AudiobookTile_OnPointerExited"
        RightTapped="ButtonTile_OnRightTapped"
        x:Name="ButtonTile">
        <Grid RowSpacing="16" VerticalAlignment="Stretch">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Border BorderThickness="0" Grid.Row="0">
                <Border
                    BorderBrush="Transparent"
                    BorderThickness="0"
                    CornerRadius="15">
                    <ContentPresenter
                        Content="{x:Bind Source, Mode=OneWay}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top" />
                </Border>
                <winUi:Effects.Shadow>
                    <media:AttachedCardShadow CornerRadius="15" Offset="4, 4" />
                </winUi:Effects.Shadow>
            </Border>

            <Grid
                Grid.Row="0"
                Visibility="Collapsed"
                x:Name="BlackOverlayGrid">
                <Grid.Resources>
                    <SolidColorBrush x:Key="ButtonBackground">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="ButtonBackgroundPointerOver">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="ButtonBackgroundPressed">Transparent</SolidColorBrush>
                    <SolidColorBrush x:Key="ButtonBackgroundDisabled">Transparent</SolidColorBrush>
                </Grid.Resources>
                <Grid
                    Background="Black"
                    CornerRadius="15"
                    Opacity="0.55" />
                <Button
                    BorderThickness="0"
                    Click="PlayButton_Click"
                    HorizontalAlignment="Center"
                    Tag="play"
                    ToolTipService.ToolTip="Play"
                    VerticalAlignment="Center"
                    x:Name="PlayPauseButton">
                    <Button.Resources>
                        <ResourceDictionary>
                            <StaticResource ResourceKey="AccentFillColorDefaultBrush" x:Key="ButtonForeground" />
                            <StaticResource ResourceKey="AccentFillColorTertiaryBrush" x:Key="ButtonForegroundPressed" />
                            <StaticResource ResourceKey="AccentFillColorSecondaryBrush" x:Key="ButtonForegroundPointerOver" />
                            <StaticResource ResourceKey="AccentFillColorDisabledBrush" x:Key="ButtonForegroundDisabled" />
                        </ResourceDictionary>
                    </Button.Resources>
                    <Viewbox MaxHeight="70" MaxWidth="70">
                        <FontIcon Glyph="&#xF5B0;" />
                    </Viewbox>
                </Button>
            </Grid>

            <RelativePanel Grid.Row="1">
                <StackPanel
                    Orientation="Vertical"
                    RelativePanel.AlignLeftWithPanel="True"
                    Spacing="4"
                    x:Name="TitleAuthorPanel">
                    <TextBlock
                        FontSize="18"
                        Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                        MaxWidth="200"
                        Style="{StaticResource BodyTextBlockStyle}"
                        Text="{x:Bind Title, Mode=OneWay}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="NoWrap"
                        ToolTipService.ToolTip="{x:Bind Title, Mode=OneWay}"
                        x:Name="TitleText" />
                    <TextBlock
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        Style="{StaticResource CaptionTextBlockStyle}"
                        Text="{x:Bind Author, Mode=OneWay}" />
                    <!--  total number of source files  -->
                    <!--  <TextBlock Foreground="{ThemeResource TextFillColorSecondaryBrush}"  -->
                    <!--  Style="{StaticResource CaptionTextBlockStyle}">  -->
                    <!--     <Run Text="Number of Source Files: " /> -->
                    <!--     <Run Text="{x:Bind SourcePathsCount, Mode=OneWay}" /> -->
                    <!-- </TextBlock> -->
                </StackPanel>
                <Grid
                    HorizontalAlignment="Right"
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.RightOf="TitleAuthorPanel"
                    Visibility="Collapsed"
                    x:Name="ProgressGrid">
                    <ProgressRing
                        Background="LightGray"
                        Height="50"
                        HorizontalAlignment="Center"
                        IsIndeterminate="False"
                        Maximum="100"
                        Minimum="0"
                        Value="{x:Bind Progress, Mode=OneWay}"
                        VerticalAlignment="Center"
                        Width="50" />
                    <TextBlock
                        FontSize="18"
                        HorizontalAlignment="Center"
                        Text="{x:Bind Progress, Mode=OneWay}"
                        VerticalAlignment="Center" />
                </Grid>
                <Grid
                    HorizontalAlignment="Right"
                    RelativePanel.AlignRightWithPanel="True"
                    RelativePanel.RightOf="TitleAuthorPanel"
                    VerticalAlignment="Bottom"
                    Visibility="Collapsed"
                    x:Name="CompletedGrid">
                    <FontIcon
                        FontSize="50"
                        Glyph="&#xE73E;"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center" />
                </Grid>
            </RelativePanel>
        </Grid>
    </Button>
    <!-- <VisualStateManager.VisualStateGroups> -->
    <!--     <VisualStateGroup x:Name="ProgressVisibility"> -->
    <!--         <VisualState x:Name="CompletedState"> -->
    <!--             <VisualState.StateTriggers> -->
    <!--                 <winUi:IsEqualStateTrigger To="true" Value="{x:Bind IsCompleted, Mode=OneWay}" /> -->
    <!--             </VisualState.StateTriggers> -->
    <!--             <VisualState.Setters> -->
    <!--                 <Setter Target="ProgressGrid.Visibility" Value="Collapsed" /> -->
    <!--                 <Setter Target="CompletedGrid.Visibility" Value="Visible" /> -->
    <!--                 <Setter Target="MarkAsCompletedButton.Visibility" Value="Collapsed" /> -->
    <!--                 <Setter Target="MarkAsIncompleteButton.Visibility" Value="Visible" /> -->
    <!--             </VisualState.Setters> -->
    <!--         </VisualState> -->
    <!--         <VisualState x:Name="ProgressState"> -->
    <!--             <VisualState.StateTriggers> -->
    <!--                 <winUi:IsEqualStateTrigger To="false" Value="{x:Bind IsCompleted, Mode=OneWay}" /> -->
    <!--             </VisualState.StateTriggers> -->
    <!--             <VisualState.Setters> -->
    <!--                 <Setter Target="ProgressGrid.Visibility" Value="Visible" /> -->
    <!--                 <Setter Target="CompletedGrid.Visibility" Value="Collapsed" /> -->
    <!--                 <Setter Target="MarkAsCompletedButton.Visibility" Value="Visible" /> -->
    <!--                 <Setter Target="MarkAsIncompleteButton.Visibility" Value="Collapsed" /> -->
    <!--             </VisualState.Setters> -->
    <!--         </VisualState> -->
    <!--     </VisualStateGroup> -->
    <!-- </VisualStateManager.VisualStateGroups> -->
</UserControl>